name: Release project app

on:
  push:
    paths:
      - 'project/**'
      - '.github/workflows/*'


env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b

jobs:
  build-publish-deploy:
    name: Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: dwk-environments
    defaults:
      run:
        working-directory: project

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: google-github-actions/auth@v2
      with:
        credentials_json: "${{ secrets.GKE_SA_KEY }}"

    - name: "Set up Cloud SDK"
      uses: google-github-actions/setup-gcloud@v2

    - name: "Use gcloud CLI"
      run: gcloud info

    - run: gcloud --quiet auth configure-docker

    - name: Get GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: '${{ env.GKE_CLUSTER }}'
        project_id: '${{ env.PROJECT_ID }}'
        location: '${{ env.GKE_ZONE }}'

    - name: Build Backend Image
      run: docker build -t "gcr.io/$PROJECT_ID/todo-backend:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" ./backend

    - name: Build Frontend Image
      run: docker build -t "gcr.io/$PROJECT_ID/todo-application:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" ./app
    
    - name: Build Cronjob Image
      run: docker build -t "gcr.io/$PROJECT_ID/todo-cron:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" ./todo_cronjob

    - name: Build backupdb Image
      run: docker build -t "gcr.io/$PROJECT_ID/backup-db:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" ./db_backup

    - name: Push Backend Image
      run: docker push "gcr.io/$PROJECT_ID/todo-backend:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"

    - name: Push Frontend Image
      run: docker push "gcr.io/$PROJECT_ID/todo-application:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"

    - name: Push Cronjob Image
      run: docker push "gcr.io/$PROJECT_ID/todo-cron:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"

    - name: Push DB backup job
      run: docker push "gcr.io/$PROJECT_ID/backup-db:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"

    - name: Set up Kustomize
      uses: imranismail/setup-kustomize@v2.1.0

    - name: Decrypt secrets with SOPS
      env:
        SOPS_AGE_KEY_FILE_CONTENT: ${{ secrets.SOPS_SECRET }}
      run: |
        curl -O -L -C - https://github.com/mozilla/sops/releases/download/v3.7.3/sops-v3.7.3.linux
        sudo mv sops-v3.7.3.linux /usr/bin/sops
        sudo chmod +x /usr/bin/sops
        echo "$SOPS_AGE_KEY_FILE_CONTENT" > key.txt
        export SOPS_AGE_KEY_FILE=$(pwd)/key.txt
        sops --decrypt backend/manifests/secret.enc.yaml > backend/manifests/secret.yaml
        rm -f key.txt

    - name: Deploy to GKE
      run: |-
        BRANCH_NAME="${GITHUB_REF##*/}"
        
        if [ "$BRANCH_NAME" == "main" ]; then
          NAMESPACE="default"
        else
          NAMESPACE="$BRANCH_NAME"
        fi

        kubectl create namespace $NAMESPACE || echo "Namespace already exists"
        kustomize edit set namespace $NAMESPACE
        kustomize edit set image BACKEND_IMAGE=gcr.io/$PROJECT_ID/todo-backend:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
        kustomize edit set image APP_IMAGE=gcr.io/$PROJECT_ID/todo-application:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
        kustomize edit set image CRONJOB=gcr.io/$PROJECT_ID/todo-cron:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
        kustomize edit set image DB_BACKUP=gcr.io/$PROJECT_ID/backup-db:${GITHUB_REF#refs/heads/}-$GITHUB_SHA

        kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/todo-backend
        kubectl rollout status deployment/todo-application
        kubectl get services -o wide
